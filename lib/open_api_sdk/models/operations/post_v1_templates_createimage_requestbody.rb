# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class PostV1TemplatesCreateImageRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The api key to use for this request
      field :api_key, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('apiKey') } }
      # Your template id
      field :template_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('templateId') } }
      # Only for debug purpose, it draws bounding box for each layer
      field :debug, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('_debug') } }

      field :format, T.nilable(::OpenApiSDK::Operations::Format), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('format'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::Format, true) } }

      field :modifications, T.nilable(T::Array[::OpenApiSDK::Shared::Modification]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modifications') } }


      sig { params(api_key: ::String, template_id: ::String, debug: T.nilable(::String), format: T.nilable(::OpenApiSDK::Operations::Format), modifications: T.nilable(T::Array[::OpenApiSDK::Shared::Modification])).void }
      def initialize(api_key: nil, template_id: nil, debug: nil, format: nil, modifications: nil)
        @api_key = api_key
        @template_id = template_id
        @debug = debug
        @format = format
        @modifications = modifications
      end
    end
  end
end
