# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # A modification (aka override) to apply to the layer in image
    class Modification < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The layer name of the modification
      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }
      # Modify the barcode layer content with this field
      field :barcode, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('barcode') } }
      # Update chart layer's data, follow chart.js data structure
      field :chart, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('chart') } }
      # The color for the modification
      field :color, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('color') } }
      # Modify the qrcode layer content with this field
      field :qrcode, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('qrcode') } }
      # The source image for the modification
      field :src, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('src') } }
      # Star value
      field :star, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('star') } }
      # You can modify the text layer with this field
      field :text, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('text') } }
      # Set the visibility of the field
      field :visible, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('visible') } }


      sig { params(name: ::String, barcode: T.nilable(::String), chart: T.nilable(T::Hash[Symbol, ::Object]), color: T.nilable(::String), qrcode: T.nilable(::String), src: T.nilable(::String), star: T.nilable(::Float), text: T.nilable(::String), visible: T.nilable(T::Boolean)).void }
      def initialize(name: nil, barcode: nil, chart: nil, color: nil, qrcode: nil, src: nil, star: nil, text: nil, visible: nil)
        @name = name
        @barcode = barcode
        @chart = chart
        @color = color
        @qrcode = qrcode
        @src = src
        @star = star
        @text = text
        @visible = visible
      end
    end
  end
end
